[{"D:\\Web Development\\my-app\\src\\index.js":"1","D:\\Web Development\\my-app\\src\\App.js":"2","D:\\Web Development\\my-app\\src\\components\\Main.js":"3","D:\\Web Development\\my-app\\src\\data.js":"4","D:\\Web Development\\my-app\\src\\components\\Card.js":"5"},{"size":176,"mtime":1620027857403,"results":"6","hashOfConfig":"7"},{"size":1537,"mtime":1620207071804,"results":"8","hashOfConfig":"7"},{"size":3205,"mtime":1620208548321,"results":"9","hashOfConfig":"7"},{"size":1033,"mtime":1620067325074,"results":"10","hashOfConfig":"7"},{"size":600,"mtime":1620204112826,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"196f6ir",{"filePath":"15","messages":"16","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\Web Development\\my-app\\src\\index.js",[],["24","25"],"D:\\Web Development\\my-app\\src\\App.js",["26","27","28","29","30","31","32","33","34","35","36","37"],"D:\\Web Development\\my-app\\src\\components\\Main.js",[],"D:\\Web Development\\my-app\\src\\data.js",[],"D:\\Web Development\\my-app\\src\\components\\Card.js",["38"],"import React from 'react'\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className=\"card js-slidein block\">\r\n            { props.item.image?(\r\n                <img className=\"small\" src={props.item.image} />\r\n            ):(\r\n                <video className=\"small\" autoPlay muted>\r\n                            <source src={props.item.video} type=\"video/mp4\"></source>\r\n                </video>\r\n            )}\r\n            \r\n            <p className=\"sub-title\">{props.item.name}</p>\r\n            <p className=\"second\">{props.item.type}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":14,"column":17,"nodeType":"45","endLine":14,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":17,"column":17,"nodeType":"45","endLine":17,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":18,"column":17,"nodeType":"45","endLine":18,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":19,"column":17,"nodeType":"45","endLine":19,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":20,"column":17,"nodeType":"45","endLine":20,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":21,"column":17,"nodeType":"45","endLine":21,"endColumn":40},{"ruleId":"43","severity":1,"message":"44","line":29,"column":21,"nodeType":"45","endLine":29,"endColumn":24},{"ruleId":"43","severity":1,"message":"44","line":33,"column":21,"nodeType":"45","endLine":33,"endColumn":46},{"ruleId":"43","severity":1,"message":"44","line":34,"column":21,"nodeType":"45","endLine":34,"endColumn":46},{"ruleId":"43","severity":1,"message":"44","line":35,"column":21,"nodeType":"45","endLine":35,"endColumn":46},{"ruleId":"43","severity":1,"message":"44","line":36,"column":21,"nodeType":"45","endLine":36,"endColumn":46},{"ruleId":"43","severity":1,"message":"44","line":37,"column":21,"nodeType":"45","endLine":37,"endColumn":46},{"ruleId":"46","severity":1,"message":"47","line":7,"column":17,"nodeType":"45","endLine":7,"endColumn":65},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]